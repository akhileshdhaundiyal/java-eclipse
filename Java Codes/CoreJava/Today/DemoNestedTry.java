/



/**This class demonstrates try statements can be implicitly nested via
  *calls to methods.
  */

class NestTry {

    /** Constructor. */

    protected NestTry() {
    }

    /** Through an exception out of the method. */


    /** @param a is number passed. */

    public static void nesttry(int a) {

        try { // nested try block

        /* If one command line arg is used,then an divide-by-zero exception
         *will be generated by the following code.
         */

           if (a == 1) {

               a = a / (a - a); // division by zero
           }
      /* If two command line args are used
         then generate an out-of-bounds exception. */

           if (a == 2) {

               int []c = {1};
               c[42] = 99; // generate an out-of-bounds exception
           }
       } catch (ArrayIndexOutOfBoundsException e) {

      System.out.println("Array index out-of-bounds: " + e);
      }

    }

}

/**
  * This is a main class.
  */

class DemoNestedTry {

/** Constructor. */

    protected DemoNestedTry() {
    }

    /**
     * Sole entry point to the class and application.
     * @param args Array of String arguments.
     */


    public static void main(final String[] args) {

    try {

        int a = args.length;

      /* If no command line args are present,
         the following statement will generate
         a divide-by-zero exception. */

        int b = 42 / a;

        System.out.println("a = " + a);

        NestTry.nesttry(a);

    } catch (ArithmeticException e) {

      System.out.println("Divide by 0: " + e);
      }

  }

}


